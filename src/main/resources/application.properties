# POSTGRESQL
spring.datasource.url=jdbc:postgresql://localhost:5432/demo_security?createDatabaseIfNotExist=true
spring.datasource.username=${POSTGRES_DATASOURCE_USER}
spring.datasource.password=${POSTGRES_DATASOURCE_PASSWORD}

# JPA
spring.jpa.hibernate.ddl-auto=none 
spring.jpa.show-sql=true
spring.jpa.open-in-view=true

# ==============================
# CONFIGURAÇÃO DO BANCO DE DADOS MYSQL
# ==============================
# URL de conexão com o banco de dados (MySQL)
# spring.datasource.url= jdbc:mysql://localhost:3306/demo_security?useTimezone=true&serverTimezone=America/Sao_Paulo&useSSL=false&allowPublicKeyRetrieval=true

# Nome de usuário e senha do banco de dados (definida via variável de ambiente) 
# spring.datasource.username=${MYSQL_DATASOURCE_USERNAME}
# spring.datasource.password=${MYSQL_DATASOURCE_PASSWORD}

# Configurações do JPA e Hibernate
# Não realiza alterações automáticas no esquema do banco (Para aplicar mudanças automáticas, altere para "update") 
# spring.jpa.hibernate.ddl-auto=none

# Exibe as consultas SQL no console
# spring.jpa.show-sql=true

# Formata as consultas SQL para melhor legibilidade (Não é recomendado deixar true em produção)
# spring.jpa.properties.hibernate.format_sql=true

# Mantém a sessão do Hibernate aberta durante toda a requisição HTTP.
# Isso evita LazyInitializationException ao acessar relações LAZY no Controller ou na View.
# ATENÇÃO: Em aplicações maiores, essa configuração pode causar problemas de desempenho,
# pois mantém conexões com o banco abertas por mais tempo, aumentando a carga e risco de deadlocks.
# Se não for necessário acessar relações LAZY fora do Service, defina como "false".
# spring.jpa.open-in-view=true


# ==============================
# THYMELEAF
# ==============================
# Desativa o cache do Thymeleaf (útil durante o desenvolvimento)
spring.thymeleaf.cache= false

# ==============================
# CONFIGURAÇÕES DO JAVA MAIL
# ==============================
# Servidor SMTP do Gmail
spring.mail.host=smtp.gmail.com
spring.mail.port=587

# Credenciais de autenticação (Defina via variáveis de ambiente)
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}

# Protocolo de autenticação e segurança
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Confiança no servidor SMTP do Gmail
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com

# Testar conexão ao iniciar a aplicação (Desative em produção se houver instabilidade)
spring.mail.test-connection=true

# ==============================
# LIMITANDO A SESSION DE USUÁRIO A UNICO DISPOSITIVO
# ==============================

# invalida a sessão depois de X minutos da inatividade
server.servlet.session.timeout=1m
app.security.remember-me-key=uma-chave-secreta-segura



